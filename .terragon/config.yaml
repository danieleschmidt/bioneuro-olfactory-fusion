# Terragon Autonomous SDLC Configuration

repository:
  name: "bioneuro-olfactory-fusion"
  maturity_level: "developing"  # nascent, developing, maturing, advanced
  primary_language: "python"
  framework: "pytorch"
  domain: "neuromorphic_computing"

scoring:
  weights:
    # Adaptive weights based on repository maturity
    developing:
      wsjf: 0.5        # Weighted Shortest Job First
      ice: 0.2         # Impact, Confidence, Ease
      technicalDebt: 0.2
      security: 0.1
  
  thresholds:
    minScore: 15       # Minimum composite score to execute
    maxRisk: 0.8       # Maximum risk tolerance (0-1)
    securityBoost: 2.0 # Multiplier for security items
    complianceBoost: 1.8

discovery:
  sources:
    - gitHistory         # TODO/FIXME comments, commit patterns
    - staticAnalysis     # Code quality, complexity
    - issueTrackers      # GitHub issues, PRs
    - vulnerabilityDatabases  # CVE, OSV, GitHub Advisory
    - performanceMonitoring   # Profiling data
    - testCoverage       # Coverage gaps
    - documentation      # Missing or outdated docs
    - dependencies       # Outdated packages
  
  tools:
    staticAnalysis:
      - ruff            # Python linting
      - mypy            # Type checking  
      - bandit          # Security scanning
      - safety          # Dependency vulnerabilities
    
    testing:
      - pytest          # Test framework
      - coverage        # Coverage measurement
      - mutation        # Mutation testing (future)
    
    security:
      - bandit          # Security linting
      - safety          # Dependency scanning
      - semgrep         # Static analysis security
      - trivy           # Container scanning

execution:
  strategy: "autonomous"    # autonomous, guided, manual
  maxConcurrentTasks: 1     # Only one task at a time
  batchSize: 5             # Items to process per cycle
  
  testRequirements:
    minCoverage: 80         # Minimum test coverage %
    maxRegressionPercent: 5 # Max performance regression %
    requirePassing: true    # All tests must pass
  
  rollbackTriggers:
    - testFailure
    - buildFailure  
    - securityViolation
    - coverageDecrease

valueTracking:
  metrics:
    - executionTime       # Time to complete tasks
    - valueDelivered      # Business value score
    - defectsReduced      # Bug fixes
    - securityImprovements # Security enhancements
    - performanceGains    # Performance improvements
    - technicalDebtReduced # Debt remediation
  
  reporting:
    frequency: "daily"    # daily, weekly, monthly
    format: "markdown"    # markdown, json, yaml
    destination: "BACKLOG.md"

scheduling:
  # Continuous execution triggers
  triggers:
    onPRMerge: true      # Execute after PR merge
    hourly: true         # Hourly security scans
    daily: true          # Daily comprehensive analysis  
    weekly: true         # Weekly deep reviews
    monthly: true        # Monthly strategic reviews
  
  timeWindows:
    security: "0 */1 * * *"     # Every hour
    analysis: "0 2 * * *"       # Daily at 2 AM
    deepReview: "0 3 * * 1"     # Weekly Monday 3 AM
    strategic: "0 4 1 * *"      # Monthly 1st at 4 AM

categories:
  # Task categorization for prioritization
  high_priority:
    - security_vulnerability
    - critical_bug
    - compliance_violation
    - performance_regression
  
  medium_priority:
    - technical_debt
    - test_coverage
    - documentation
    - dependency_update
  
  low_priority:
    - code_style
    - refactoring
    - optimization
    - feature_enhancement

integrations:
  github:
    enabled: true
    features:
      - issues          # Track issues as value items
      - pullRequests    # Analyze PR feedback
      - codeReview      # Extract improvement suggestions
      - dependabot      # Dependency updates
  
  monitoring:
    enabled: false      # Enable when deployed
    tools:
      - datadog
      - prometheus
      - grafana
  
  notifications:
    slack:
      enabled: false
      webhook: ""
    email:
      enabled: false
      recipients: []