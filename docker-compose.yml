version: '3.8'

services:
  # Main API Service
  bioneuro-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: bioneuro-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://bioneuro:bioneuro_pass@postgres:5432/bioneuro_db
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - sensor_data:/app/data
    networks:
      - bioneuro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bioneuro-postgres
    environment:
      - POSTGRES_DB=bioneuro_db
      - POSTGRES_USER=bioneuro
      - POSTGRES_PASSWORD=bioneuro_pass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./bioneuro_olfactory/data/database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - bioneuro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bioneuro -d bioneuro_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: bioneuro-redis
    command: redis-server --appendonly yes --requirepass redis_pass
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - bioneuro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: bioneuro-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - bioneuro-network
    restart: unless-stopped

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: bioneuro-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    networks:
      - bioneuro-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bioneuro-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - bioneuro-api
    networks:
      - bioneuro-network
    restart: unless-stopped

  # Sensor Data Collector (Simulated)
  sensor-collector:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: bioneuro-sensor-collector
    command: python -m bioneuro_olfactory.sensors.collector
    environment:
      - DATABASE_URL=postgresql://bioneuro:bioneuro_pass@postgres:5432/bioneuro_db
      - SENSOR_ARRAY_CONFIG=/app/config/sensor_array.json
      - COLLECTION_INTERVAL=5
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - sensor_data:/app/data
      - ./config:/app/config
    networks:
      - bioneuro-network
    restart: unless-stopped

  # Alert Manager Service
  alert-manager:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: bioneuro-alert-manager
    command: python -m bioneuro_olfactory.integrations.notifications.alert_service
    environment:
      - DATABASE_URL=postgresql://bioneuro:bioneuro_pass@postgres:5432/bioneuro_db
      - REDIS_URL=redis://redis:6379/0
      - EMAIL_SMTP_HOST=smtp.gmail.com
      - EMAIL_SMTP_PORT=587
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ALERT_EMAIL_RECIPIENTS=${ALERT_EMAIL_RECIPIENTS}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bioneuro-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  sensor_data:
    driver: local

networks:
  bioneuro-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16